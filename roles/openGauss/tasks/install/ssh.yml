- name: "Create {{ og_ssh.home }}/.ssh"
  file:
    path: "{{ og_ssh.home }}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ og_ssh.user }}"
    group: "{{ og_ssh.group }}"

- name: Generate ssh keys
  block: 
    - name: "Create {{ inventory_dir }}/credentials"
      file:
        path: "{{ inventory_dir }}/credentials"
        state: directory

    - name: Generate openGauss_id_om
      openssh_keypair:
        path: "{{ inventory_dir }}/credentials/openGauss_id_om"
        type: ed25519
        regenerate: never

    - name: Generate openGauss_id_rsa
      openssh_keypair:
        path: "{{ inventory_dir }}/credentials/openGauss_id_rsa"
        regenerate: never
  delegate_to: localhost
  become: false
  run_once: true

- name: Upload ssh keys
  copy:
    src: "{{ og_key }}"
    dest: "{{ og_ssh.home }}/.ssh/{{ og_key | basename | replace('openGauss_', '') }}"
    mode: 0400
    owner: "{{ og_ssh.user }}"
    group: "{{ og_ssh.group }}"
    backup: true
  with_fileglob:
    - "{{ inventory_dir }}/credentials/openGauss_id*"
  loop_control:
    loop_var: og_key
    label: "{{ og_ssh.home }}/.ssh/{{ og_key | basename | replace('openGauss_', '') }}"

- name: Add authorized key
  authorized_key:
    user: "{{ og_ssh.user }}"
    state: present
    key: "{{ lookup('file', pub_key) }}"
  with_fileglob:
    - "{{ inventory_dir }}/credentials/openGauss_id*.pub"
  loop_control:
    loop_var: pub_key
    label: "{{ og_ssh.home }}/.ssh/{{ pub_key | basename | replace('openGauss_', '') }}"

# - name: "Setup {{ og_ssh.home }}/.ssh/config"
#   blockinfile:
#     create: true
#     path: "{{ og_ssh.home }}/.ssh/config"
#     owner: "{{ og_ssh.user }}"
#     group: "{{ og_ssh.group }}"
#     block: |
#       Host *
#         StrictHostKeyChecking no
#         UserKnownHostsFile    /dev/null

- name: Scan hosts key
  command: "ssh-keyscan -p {{ port }} {{ node }},opengauss{{ ansible_loop.index }}"
  changed_when: false
  loop: "{{ groups['openGauss'] | sort }}"
  loop_control:
    loop_var: node
    extended: true
  vars:
    port: "{{ ansible_ssh_port | default('22') }}"
  register: known_host_keys

- name: "Update {{ og_ssh.home }}/.ssh/known_hosts"
  blockinfile:
    path: "{{ og_ssh.home }}/.ssh/known_hosts"
    owner: "{{ og_ssh.user }}"
    group: "{{ og_ssh.group }}"
    create: true
    block: |
      {% for key in (host_keys | sort) %}
      {{ key }}
      {% endfor %}
  vars:
    host_keys: "{{ known_host_keys.results | map(attribute='stdout_lines') | flatten }}"