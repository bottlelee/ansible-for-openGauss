- name: Set CM facts
  ansible.builtin.set_fact:
    cm_nodes: "{{ (groups['opengauss_dn'] is defined) | ternary(groups['opengauss_dn'], '') | sort }}"
    dn_nodes: "{{ (groups['opengauss_dn'] is defined) | ternary(groups['opengauss_dn'], '') | sort }}"
    ep_nodes: ""
    og_cm_enabled: true
    og_expansion: false

- name: Root tasks
  become_user: root
  block:
    - name: Import upload tasks
      ansible.builtin.import_tasks:
        file: upload.yml

    - name: Get cm package name
      ansible.builtin.set_fact:
        cm_pkg: "{{ file }}"
      loop: "{{ og_upload.files }}"
      loop_control:
        loop_var: file
      when:
        - "'cm.tar.gz' in file"

    - name: "Change file permission of {{ cm_pkg }}"
      ansible.builtin.file:
        path: "{{ og_upload_path }}/{{ cm_pkg }}"
        owner: "{{ og_user }}"
        group: "{{ og_group }}"
        mode: "0640"

    - name: Create some paths
      ansible.builtin.file:
        path: "{{ item.0 }}"
        state: directory
        owner: "{{ og_user }}"
        group: "{{ og_group }}"
        mode: "0750"
      delegate_to: "{{ item.1 }}"
      with_nested:
        - ['{{ og_log_path }}/omm/cm/cm_server', '{{ og_log_path }}/omm/cm/cm_agent']
        - "{{ og_all_nodes }}"
      vars:
        og_log_path: "{{ combined_vars.opengauss_paths.gaussdbLogPath }}"

    - name: "Remove /opt/openGauss/install/om/{{ cm_pkg }}"
      ansible.builtin.file:
        path: "/opt/openGauss/install/om/{{ cm_pkg }}"
        state: absent
      loop: "{{ og_all_nodes }}"
      delegate_to: "{{ item }}"

    - name: Import pre tasks
      ansible.builtin.import_tasks:
        file: deploy/cluster_pre_tasks.yml

    - name: Import config generate tasks
      ansible.builtin.import_tasks:
        file: deploy/cluster_config_generate.yml

# 这里需要建一个假的定时任务，包含 'om_monitor'。后续 cm_install 时会检查替换，否则失败。
- name: Fake an om_monitor cron job before install
  ansible.builtin.cron:
    name: openGauss om monitor
    special_time: yearly
    job: "{{ og_home }}/install/app/bin/om_monitor"
  loop: "{{ dn_nodes }}"
  loop_control:
    loop_var: node
    label: "{{ hostvars[node]['node_ip'] }}"
  delegate_to: "{{ hostvars[node]['node_ip'] }}"

# 集群增加 CM 工具
- name: Deploy CM tool
  when:
    - "groups['opengauss_cm'] is not defined"
    - "og_cm_enabled"
  block:
    - name: Switchover to fix 'Term of primary is invalid or not maximal' error
      ansible.builtin.command:
        gs_ctl switchover -D {{ og_data_path }}/dn
      changed_when: false
      when:
        - "'Primary' not in node"
        - "ansible_loop.index < 3"
      loop: "{{ dn_nodes | reject('search', 'Primary') | sort(reverse=True) }}"
      loop_control:
        loop_var: node
        pause: 15
        extended: true
      delegate_to: "{{ hostvars[node]['node_ip'] }}"

    - name: Import 'wait_for_started' tasks
      ansible.builtin.import_tasks:
        file: wait_for_started.yml

    - name: Tips
      ansible.builtin.debug:
        msg: |
          Next task might take a while.
          Please wait for it complete.

    - name: Deploy CM tool
      ansible.builtin.expect:
        command: "./cm_install -X {{ og_upload_path }}/cluster_config.xml --cmpkg {{ og_upload_path }}/{{ cm_pkg }}"
        responses:
          (?i)password: "{{ og_ca_pass }}"
        chdir: "{{ og_home }}/install/app/tool/cm_tool"
        timeout: "{{ (dn_nodes | count) * 300 }}"
      changed_when: false
      register: cm_install
      until:
        - "cm_install.stdout is defined"
        - "'CM exists' in cm_install.stdout"
      retries: 2
      ignore_errors: true

    - name: Refresh cluster config
      ansible.builtin.command:
        gs_om -t refreshconf
      changed_when: false
