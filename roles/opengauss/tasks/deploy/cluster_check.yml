- name: Check cluster status
  block:
    - name: "Query cluster detail"
      ansible.builtin.command: "gs_om -t status --detail"
      changed_when: false
      register: gs_detail
      become_user: "{{ og_user }}"
      delegate_to: "{{ og_master }}"
      run_once: true

    - name: Import tasks to create runtime groups
      ansible.builtin.import_tasks:
        file: deploy/runtime_groups.yml
      run_once: true

  rescue:
    - name: Import pre tasks
      ansible.builtin.import_tasks:
        file: pre_tasks.yml
      become_user: root

    - name: Import runtime tasks
      ansible.builtin.import_tasks:
        file: deploy/runtime_groups.yml
      run_once: true

    - name: Import deploy tasks
      ansible.builtin.import_tasks:
        file: deploy/main.yml
      delegate_to: "{{ og_master }}"
      run_once: true
      vars:
        cm_nodes: "{{ (og_all_nodes | count > 2) | ternary(og_all_nodes, '') | sort }}"
        dn_nodes: "{{ groups['opengauss_dn'] | sort }}"
        ep_nodes: "{{ (groups['opengauss_ep'] is defined) | ternary(groups['opengauss_ep'], '') | sort }}"
        og_cm_enabled: "{{ og_all_nodes | count > 2 }}"

#    - name: Repeat tasks
#      ansible.builtin.include_tasks:
#        file: deploy/cluster_check.yml

- name: Mission aborted
  when:
    - "gs_detail is succeeded"
    - "gs_detail.stdout | regex_search(keywords, multiline=True, ignorecase=True)"
  vars:
    keywords: >-
      "(repair|down)"
  run_once: true
  block:
    - name: Abort tasks when cluster is unstable
      ansible.builtin.fail:
        msg: |
          集群状态有异常，请检查并手动修复后，再运行 playbook。
          Cluster status is not NORMAL, pls fix it
          and run the playbook again.
          ---------------------------------------------
          {{ gs_detail.stdout_lines }}

  always:
    - name: Import post tasks
      ansible.builtin.import_tasks:
        file: post_tasks.yml

    - name: End play
      ansible.builtin.meta:
        end_play
